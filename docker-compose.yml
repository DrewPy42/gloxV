services:
  client:
    image: node:18-alpine
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./client:/app
      - /app/node_modules  # Do not share node_modules between host and container
    depends_on:
      - server
    networks:
      - app-network
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    environment:
      MYSQL_HOST: mysql
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      CHOKIDAR_USEPOLLING: "true"  # Enable polling for file changes inside Docker
    ports:
      - "3000:3000"
    volumes:
      - ./server:/app
      - /app/node_modules  # Do not share node_modules between host and container
      - ../env:/app/.env
    depends_on:
      - mysql
    networks:
      - app-network
  mysql:
    env_file: .env
    image: mysql:8.0
    environment:
      MYSQL_HOST: mysql
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
      - ./my.cnf:/etc/mysql/conf.d/custom.cnf # Mount custom configuration
    networks:
      - app-network
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  mysql-data:

networks:
  app-network:

